(() => { var e, t, o, a = { 255: e => { function t(e) { return t = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e) { return typeof e } : function (e) { return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e }, t(e) } e.exports = function (e, o) { var a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : ""; e.save = function (e) { var n = "text/plain", r = a ? a.trim().toLowerCase().replace(/^[^\w\d]+|[^\w\d]+$/g, "").replace(/[\s\W-]+/g, "-") : "claude"; "json" === o.toLowerCase() ? (r += ".json", n = "text/json", "object" === t(e) && (e = JSON.stringify(e, void 0, 4))) : "md" === o.toLowerCase() && (r += ".md"); var s = new Blob([e], { type: n }), i = document.createElement("a"); i.download = r, i.href = window.URL.createObjectURL(s), i.dataset.downloadurl = [n, i.download, i.href].join(":"); var d = new MouseEvent("click", { canBubble: !0, cancelable: !1, view: window, detail: 0, screenX: 0, screenY: 0, clientX: 0, clientY: 0, ctrlKey: !1, altKey: !1, shiftKey: !1, metaKey: !1, button: 0, relatedTarget: null }); i.dispatchEvent(d) } } }, 361: e => { e.exports = function () { var e = document.querySelector("div.flex-1.flex.flex-col.gap-3.px-4"), t = document.querySelector("button[data-testid='chat-menu-trigger']"), o = t ? t.textContent : ""; return { elements: e.querySelectorAll("div.font-claude-message, div.font-user-message"), title: o } } }, 380: e => { e.exports = function () { return new Date(new Date(new Date(new Date).toISOString()).getTime() - 6e4 * (new Date).getTimezoneOffset()).toISOString().slice(0, 19).replace("T", " ") } } }, n = {}; function r(e) { var t = n[e]; if (void 0 !== t) return t.exports; var o = n[e] = { exports: {} }; return a[e](o, o.exports, r), o.exports } e = r(255), t = r(380), o = r(361), function () { var a = [], n = { meta: { exported_at: t() } }, r = o(), s = r.title, i = r.elements; s && (n.meta.title = s); for (var d = 0; d < i.length; d++) { var l = i[d], c = { index: d }, p = [], u = l.firstChild; if (u) { if (u.nodeType === Node.ELEMENT_NODE) { var f = []; if (l.classList.contains("font-claude-message")) { c.type = "response"; var y = u.firstChild; y || (y = u), f = y.childNodes } else c.type = "prompt", f = l.childNodes; for (var m = function () { var e = f[E]; if (e.nodeType === Node.ELEMENT_NODE) { if (N = e.tagName, h = e.textContent, "P" === N && p.push({ type: "p", data: h }), "OL" === N || "UL" === N) { var t = []; e.childNodes.forEach((function (e, o) { e.nodeType === Node.ELEMENT_NODE && "LI" === e.tagName && t.push({ type: "li", data: e.textContent }) })), "OL" === N && p.push({ type: "ol", data: t }), "UL" === N && p.push({ type: "ul", data: t }) } if ("PRE" === N) { var o = e.querySelector("code"), a = o.textContent, n = o.classList[0].split("-")[1]; p.push({ type: "pre", language: n, data: a }) } if ("TABLE" === N) { var r = []; e.childNodes.forEach((function (e) { if (e.nodeType === Node.ELEMENT_NODE && ("THEAD" === e.tagName || "TBODY" === e.tagName)) { var t = []; e.childNodes.forEach((function (e) { if (e.nodeType === Node.ELEMENT_NODE && "TR" === e.tagName) { var o = []; e.childNodes.forEach((function (e) { e.nodeType !== Node.ELEMENT_NODE || "TD" !== e.tagName && "TH" !== e.tagName || o.push({ type: e.tagName.toLowerCase(), data: e.textContent }) })), t.push({ type: "tr", data: o }) } })), r.push({ type: e.tagName.toLowerCase(), data: t }) } })), p.push({ type: "table", data: r }) } } }, E = 0; E < f.length; E++) { var N, h; m() } } u.nodeType === Node.TEXT_NODE && (c.type = "prompt", p.push(u.textContent)), c.message = p, a.push(c) } } n.chats = a, e(console, "json", s), console.save(n) }() })();
